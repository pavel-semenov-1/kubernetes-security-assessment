trivy:
  deploy: false
  image: aquasec/trivy:latest
  init:
    image: alpine/k8s@sha256:fea4057e9e8a0d363ac4f67e55cf6ab8a6e44a057e0e0315ca7b5068927c5fdc
  storage:
    name: trivy-scan-results
    size: 200Mi

kubescape:
  deploy: false
  image: ksa/kubescape:latest

openclarity:
  deploy: false
  image: ksa/openclarity:latest

prowler:
  deploy: false
  image: ksa/prowler:latest
  storage:
    name: prowler-scan-results
    size: 200Mi

kubebench:
  deploy: false
  image: docker.io/aquasec/kube-bench:v0.9.3
  storage:
    name: kube-bench-scan-results
    size: 200Mi

dashboard:
  image: ksa/dashboard:latest
  security:
    default: true
    runAsUser:
    allowPrivilegeEscalation:
    capabilities:
      add:
      drop:
    runAsNonRoot:
    seccompProfileType:
  service:
    name: dashboard
    type: LoadBalancer
    port: 3123
    targetPort: 3000

parser:
  image: ksa/parser:latest
  service:
    name: parser
    type: LoadBalancer
    port: 8123
    targetPort: 8000
  volumes:
    basepath: /opt/scan
    trivy:
      path: /opt/scan/trivy
    kubebench:
      path: /opt/scan/kube-bench
    kubescape:
      path: /opt/scan/kubescape
    prowler:
      path: /opt/scan/prowler

aggregator:
  image: ksa/aggregator:latest
  service:
    name: aggregator
    type: LoadBalancer
    port: 8124
    targetPort: 8000

database:
  service:
    type: LoadBalancer
    port: 5432
    name: postgres
  cm:
    name: postgres-config
  secret:
    name: postgres-secret
  sts:
    name: postgres
    image:
      repository: ksa/postgres
      pullPolicy: IfNotPresent
    volumes:
    - name: postgres
      persistentVolumeClaim:
        claimName: postgres-data
    volumeMounts:
    - name: postgres
      mountPath: /var/lib/postgresql/data
    readinessProbe:
      exec:
        command:
        - "/usr/bin/pg_isready"
      initialDelaySeconds: 10
      periodSeconds: 5
    livenessProbe:
      exec:
        command:
        - "/usr/bin/pg_isready"
      initialDelaySeconds: 10
      periodSeconds: 5
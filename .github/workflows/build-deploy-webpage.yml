name: build & deploy the webpage

on:
  push:
    branches:
    - master
    paths:
    - web
    - docs
    - .github/workflows/build-deploy-webpage.yml
  workflow_dispatch:

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: inject secrets
      run: |
        cd web
        sed -i "s|%GITHUB_TOKEN%|${{ secrets.TOKEN_PULL_ISSUES }}|g; \
        s|%GITHUB_API_REPO_URL%|${{ secrets.API_REPO_URL }}|g; \
        s|%GITHUB_THESIS_LABEL_ID%|${{ secrets.THESIS_LABEL_ID }}|g; \
        s|%DOWNLOAD_THESIS_URL%|${{ vars.DOWNLOAD_THESIS_URL }}|g; \
        s|%DOWNLOAD_SEMINAR_PRESENTATION_URL%|${{ vars.DOWNLOAD_SEMINAR_PRESENTATION_URL }}|g; \
        s|%DOWNLOAD_DEMO_URL%|${{ vars.DOWNLOAD_DEMO_URL }}|g" .env.production

    - name: inject docs list
      run: |
        echo -en "\nDOCUMENT_LIST=" >> web/.env.production
        for file in ./docs/*; do \
            if [ -f "$file" ]; then \
                filename=$(basename -- "${file}"); \
                title=$(grep "title:" "$file" | sed "s|^title: \(.*\)$|\1|" -); \
                echo -n "${title}:docs/${filename%.*}.html~" >> web/.env.production; \
            fi \
        done
    
    - name: build
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    - run: |
        cd web
        npm install
        npm run build

    - name: generate docs
      run: |
        mkdir web/public/docs
        sudo apt update && sudo apt install pandoc
        for file in ./docs/*; do \
            if [ -f "$file" ]; then \
                filename=$(basename -- "${file}"); \
                pandoc -t html5 -s -o "web/public/docs/${filename%.*}.html" -c style.css -H ./docs/extensions/header.html "${file}"; \
            fi \
        done
        cp docs/extensions/style.css web/public/docs/style.css
        cp -r docs/img web/public/docs/img
       
    - name: copy thesis artifacts
      run: |
        mkdir web/public/artifacts
        cp latex/main.pdf web/public/artifacts/main.pdf
        cp artifacts/project_seminar.pptx web/public/artifacts/project_seminar.pptx

    - uses: actions/upload-pages-artifact@v3
      with:
        path: "web/public"

  # Deploy job
  deploy:
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: deploy
        id: deployment
        uses: actions/deploy-pages@v1
